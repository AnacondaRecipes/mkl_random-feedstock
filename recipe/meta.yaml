{% set version = "1.2.3" %}

package:
  name: mkl_random
  version: {{ version }}

source:
  url: https://github.com/IntelPython/mkl_random/archive/v{{ version }}.tar.gz
  sha256: bb2033d82f66d9a051af821a0c1d6b5506775e181b41752b4477932e077f6b03
  # clang does not appreciate having -std=c++11 set on the C compiler.
  # This patch disables this. CXXFLAGS is later on set to include 
  # -std=c++11 as a replacement.
  patches:                              # [osx]
    - patches/0001-cpp_flags_osx.patch  # [osx]

build:
  number: 0
  skip: true  # [not x86]
  script: 
    - CXXFLAGS="${CXXFLAGS/-std=c++14/} -std=c++11"  # [osx]
    - {{PYTHON}} -m pip install --no-build-isolation --no-deps .
  script_env:
    - MKLROOT={{PREFIX}}
  ignore_run_exports:
    - blas

requirements:
  build:
    - {{ compiler('cxx') }}
    - patch  # [osx]
  host:
    - python
    - pip
    - setuptools
    - wheel
    - mkl-devel  {{ mkl }}
    - cython 3
    - numpy-base {{ numpy }}
  run:
    - python
    - mkl
    - {{ pin_compatible('numpy') }}

test:
  commands:
    - pip check
    # nose is incompatible with python 3.12
    - nosetests -v -e test_hypergeometric mkl_random   # [py<312]
  requires:
    - pip
    - nose                                             # [py<312]
  imports:
    - mkl_random
    - mkl_random.mklrand

about:
  home: https://github.com/IntelPython/mkl_random
  license: BSD-3-Clause
  license_file: LICENSE.txt
  license_family: BSD
  description: NumPy-based implementation of random number generation sampling using Intel (R) Math Kernel Library, mirroring numpy.random, but exposing all choices of sampling algorithms available in MKL.
  summary: Intel (R) MKL-powered package for sampling from common probability distributions into NumPy arrays.
  dev_url: https://github.com/IntelPython/mkl_random
  doc_url: https://github.com/IntelPython/mkl_random

extra:
  recipe-maintainers:
    - oleksandr-pavlyk
